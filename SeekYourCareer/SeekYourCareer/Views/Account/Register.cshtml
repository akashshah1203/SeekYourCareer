@model SeekYourCareer.Models.Applicant

@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/RegisterLayout.cshtml";
}


<script>
    function CheckUserAvailability()
    {
        var username = document.getElementById("UserName").value;
        var serviceurl = "http://localhost:51074/Service1.svc/CheckAvailability?username=" + username;
        jQuery.support.cors = true;
        $.ajax({    
            url: serviceurl,
            cache: false,
            type: "GET",
            async: false,
            dataType: "jsonp",
            success: function (data) {
                console.log(data);
                var retval = JSON.parse(data);

                if (retval["available"] == false)
                {
                    Alert.render("Username Not Available.")
                    //document.getElementById("Register").disabled = true;
                    $("#Register").attr("disabled",true);
                }
                else {
                    document.getElementById("Register").disabled = false;
                    $("#Register").attr("disabled", false);
                    Alert.render("Username Available.")
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                debugger;
                Alert.render("Service Error");
            }
        });
    }
</script>
<style type="text/css">
.form-style-5{
    max-width: 500px;
    padding: 10px 20px;
    background: #f4f7f8;
    margin: 10px auto;
    padding: 20px;
    background: #f4f7f8;
    border-radius: 8px;
    font-family: Georgia, "Times New Roman", Times, serif;
}
.form-style-5 fieldset{
    border: none;
}
.form-style-5 legend {
    font-size: 1.4em;
    margin-bottom: 10px;
}
.form-style-5 label {
    display: block;
    margin-bottom: 8px;
}
.form-style-5 .editor-field {
    font-family: Georgia, "Times New Roman", Times, serif;
    background: rgba(255,255,255,.1);
    border: none;
    border-radius: 4px;
    font-size: 16px;
    margin: 0;
    outline: 0;
    padding: 7px;
    width: 100%;
    box-sizing: border-box; 
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box; 
    background-color: #e8eeef;
    color:#8a97a0;
    -webkit-box-shadow: 0 1px 0 rgba(0,0,0,0.03) inset;
    box-shadow: 0 1px 0 rgba(0,0,0,0.03) inset;
    margin-bottom: 30px;
    
}
.form-style-5 .editor-field:focus{
    background: #d2d9dd;
}


.form-style-5 .number {
    background: #1abc9c;
    color: #fff;
    height: 30px;
    width: 30px;
    display: inline-block;
    font-size: 0.8em;
    margin-right: 4px;
    line-height: 30px;
    text-align: center;
    text-shadow: 0 1px 0 rgba(255,255,255,0.2);
    border-radius: 15px 15px 15px 0px;
}

.form-style-5 input[type="submit"],
.form-style-5 input[type="button"]
{
    position: relative;
    display: block;
    padding: 19px 39px 18px 39px;
    color: #FFF;
    margin: 0 auto;
    background: #1abc9c;
    font-size: 18px;
    text-align: center;
    font-style: normal;
    width: 80%;
    border: 1px solid #16a085;
    border-width: 1px 1px 3px;
    margin-bottom: 10px;
}
.form-style-5 input[type="submit"]:hover,
.form-style-5 input[type="button"]:hover
{
    background: #109177;
}
</style>


<h2 style="text-align:center">Register</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    
<div class="form-style-5">
    <fieldset>
        <legend>Applicant</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.UserName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.UserName)
            @Html.ValidationMessageFor(model => model.UserName)
        </div>
        <input type="button" value="Check Username" onclick="CheckUserAvailability()"/>
        <div class="editor-label">
            @Html.LabelFor(model => model.Password)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Password)
            @Html.ValidationMessageFor(model => model.Password)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ConfirmPassword)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ConfirmPassword)
            @Html.ValidationMessageFor(model => model.ConfirmPassword)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DateOfBirth)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DateOfBirth)
            @Html.ValidationMessageFor(model => model.DateOfBirth)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ContactNumber)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ContactNumber)
            @Html.ValidationMessageFor(model => model.ContactNumber)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.EmailId)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.EmailId)
            @Html.ValidationMessageFor(model => model.EmailId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Address)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Address)
            @Html.ValidationMessageFor(model => model.Address)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SscPercentage)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SscPercentage)
            @Html.ValidationMessageFor(model => model.SscPercentage)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.HscPercentage)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.HscPercentage)
            @Html.ValidationMessageFor(model => model.HscPercentage)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CompletedGraduation)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CompletedGraduation)
            @Html.ValidationMessageFor(model => model.CompletedGraduation)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.GraduationPercentage)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.GraduationPercentage)
            @Html.ValidationMessageFor(model => model.GraduationPercentage)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CompletedPostGraduation)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CompletedPostGraduation)
            @Html.ValidationMessageFor(model => model.CompletedPostGraduation)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PostGraduationPercentage)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PostGraduationPercentage)
            @Html.ValidationMessageFor(model => model.PostGraduationPercentage)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PreviousWorkExperience)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PreviousWorkExperience)
            @Html.ValidationMessageFor(model => model.PreviousWorkExperience)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.WorkExperience)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.WorkExperience)
            @Html.ValidationMessageFor(model => model.WorkExperience)
        </div>

        <p>
            <input type="submit" value="Register" id="Register" disabled/>
        </p>
    </fieldset>
</div>
}

<div id="dialogoverlay"></div>
<div id="dialogbox">
  <div>
    <div id="dialogboxhead"></div>
    <div id="dialogboxbody"></div>
    <div id="dialogboxfoot"></div>
  </div>
</div>